#!/bin/bash
set -e -x

INSTALL_RPM="cloudify-manager-install.rpm"
CONFIG_FILE_PATH="/etc/cloudify/config.yaml"

function generate_keys
{
  # generate public/private key pair and add to authorized_keys
  ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ''
  cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
}

function create_config
{
  echo "Creating install config file..."
  echo "manager:
  private_ip: 127.0.0.1
  public_ip: 127.0.0.1
  set_manager_ip_on_boot: true
  security:
    admin_username: ${CLOUDIFY_MANAGER_USERNAME:-admin}
    admin_password: ${CLOUDIFY_MANAGER_PASSWORD:-admin}
  validations:
    skip_validations: ${INSTALL_SKIP_VALIDATION:-false}
  monitoring_install: &monitoring_install
      skip_installation: false" > ${CONFIG_FILE_PATH}
}

function install_manager
{
  echo "Installing Cloudify Manager..."

  # bootstrap the manager locally
  set +e
  cfy_manager install
  if [ "$?" -ne "0" ]; then
    echo "Install failed, attempting to get more information about the failure..."
    echo "Running cfy profiles use.."
    cfy profiles use localhost -u ${CLOUDIFY_MANAGER_USERNAME:-admin} -p ${CLOUDIFY_MANAGER_PASSWORD:-admin} -t default_tenant
    if [ "$?" -eq "0" ]; then
      echo "Running cfy status.."
      cfy status
      echo "Running deployments list.."
      cfy deployments list
      echo "Running cfy executions list for sanity deployment.."
      cfy executions list -d sanity_deployment
      if [ -f /var/log/cloudify/mgmtworker/mgmtworker.log ]; then
        echo "Printing /var/log/cloudify/mgmtworker/mgmtworker.log to console.."
        cat /var/log/cloudify/mgmtworker/mgmtworker.log
      fi
      if [ -f /var/log/cloudify/mgmtworker/logs/sanity.log ]; then
        echo "Printing /var/log/cloudify/mgmtworker/logs/sanity.log to console.."
        cat /var/log/cloudify/mgmtworker/logs/sanity.log
      fi
    fi
    echo "bootstrap failed!"
    exit 1
  fi

  sudo sh -c "echo '${PROVIDER}' > /opt/cfy/image.info"
  set -e
}

generate_keys
create_config
install_manager
