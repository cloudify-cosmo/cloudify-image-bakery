#!/bin/bash
set -e

CLI_RPM="cloudify-cli.rpm"
MANAGER_BLUEPRINTS_PATH="/opt/cfy/cloudify-manager-blueprints"
MANAGER_BLUEPRINT_PATH="${MANAGER_BLUEPRINTS_PATH}/simple-manager-blueprint.yaml"
INPUTS_FILE_PATH="/home/${USER}/bootstrap_inputs.yaml"
CFY_VENV="/opt/cfy/embedded"


function install_cli
{
  echo "Downloading Cloudify's CLI from: ${CLI_PACKAGE_URL}"
  curl ${CLI_PACKAGE_URL} -o ${CLI_RPM} -s

  echo "Installing Cloudify's CLI..."
  sudo rpm -i ${CLI_RPM}
}

function generate_keys
{
  # generate public/private key pair and add to authorized_keys
  ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ''
  cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
}

function create_inputs
{
  echo "public_ip: 127.0.0.1
private_ip: 127.0.0.1
ssh_user: ${USER}
ssh_key_filename: /home/${USER}/.ssh/id_rsa

ssl_enabled: false
admin_username: ${CLOUDIFY_MANAGER_USERNAME}
admin_password: ${CLOUDIFY_MANAGER_PASSWORD}

set_manager_ip_on_boot: true

rabbitmq_ssl_enabled: false
rabbitmq_username: ${CLOUDIFY_BROKER_USERNAME}
rabbitmq_password: ${CLOUDIFY_BROKER_PASSWORD}" > ${INPUTS_FILE_PATH}
}


function bootstrap
{
  echo "preparing to bootstrap..."
  create_inputs

  echo "bootstrapping..."
  # bootstrap the manager locally
  cfy bootstrap ${MANAGER_BLUEPRINT_PATH} -i ${INPUTS_FILE_PATH} -v
  if [ "$?" -ne "0" ]; then
    echo "Bootstrap failed, stopping provision."
    exit 1
  fi

  # configure cli for root user
  sudo -u root cfy profiles use localhost -u ${CLOUDIFY_MANAGER_USERNAME} -p ${CLOUDIFY_MANAGER_PASSWORD} -t default_tenant
  echo "bootstrap done."
}

install_cli
generate_keys
bootstrap
